// @generated by protoc-gen-es v2.2.3 with parameter "target=ts"
// @generated from file conclave/qos/v1/qos.proto (package conclave.qos.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file conclave/qos/v1/qos.proto.
 */
export const file_conclave_qos_v1_qos: GenFile = /*@__PURE__*/
  fileDesc("Chljb25jbGF2ZS9xb3MvdjEvcW9zLnByb3RvEg9jb25jbGF2ZS5xb3MudjEiNwoGU2V0SW50EgsKA3NldBgBIAEoCBIQCghpbmZpbml0ZRgCIAEoCBIOCgZudW1iZXIYAyABKAMiOgoJU2V0RG91YmxlEgsKA3NldBgBIAEoCBIQCghpbmZpbml0ZRgCIAEoCBIOCgZudW1iZXIYAyABKAEimgEKBkxpbWl0cxISCgpncmFjZV90aW1lGAEgASgFEicKA21heBgCIAEoCzIaLmNvbmNsYXZlLnFvcy52MS5NYXhMaW1pdHMSKgoGZmFjdG9yGAMgASgLMhouY29uY2xhdmUucW9zLnYxLlNldERvdWJsZRInCgNtaW4YBCABKAsyGi5jb25jbGF2ZS5xb3MudjEuTWluTGltaXRzIuoBCglNYXhMaW1pdHMSMAoLYWN0aXZlX2pvYnMYASABKAsyGy5jb25jbGF2ZS5xb3MudjEuQWN0aXZlSm9icxIpCgR0cmVzGAIgASgLMhsuY29uY2xhdmUucW9zLnYxLlRyZXNMaW1pdHMSLgoKd2FsbF9jbG9jaxgDIAEoCzIaLmNvbmNsYXZlLnFvcy52MS5XYWxsQ2xvY2sSIwoEam9icxgEIAEoCzIVLmNvbmNsYXZlLnFvcy52MS5Kb2JzEisKCGFjY3J1aW5nGAUgASgLMhkuY29uY2xhdmUucW9zLnYxLkFjY3J1aW5nIl8KCkFjdGl2ZUpvYnMSKQoIYWNjcnVpbmcYASABKAsyFy5jb25jbGF2ZS5xb3MudjEuU2V0SW50EiYKBWNvdW50GAIgASgLMhcuY29uY2xhdmUucW9zLnYxLlNldEludCJtCgpUcmVzTGltaXRzEg0KBXRvdGFsGAEgAygDEikKB21pbnV0ZXMYAiABKAsyGC5jb25jbGF2ZS5xb3MudjEuTWludXRlcxIlCgNwZXIYAyABKAsyGC5jb25jbGF2ZS5xb3MudjEuVHJlc1BlciIyCgdNaW51dGVzEicKA3BlchgBIAEoCzIaLmNvbmNsYXZlLnFvcy52MS5QZXJBcnJheXMiRAoJUGVyQXJyYXlzEgsKA3FvcxgBIAMoAxILCgNqb2IYAiADKAMSDwoHYWNjb3VudBgDIAMoAxIMCgR1c2VyGAQgAygDIkMKB1RyZXNQZXISDwoHYWNjb3VudBgBIAMoAxILCgNqb2IYAiADKAMSDAoEbm9kZRgDIAMoAxIMCgR1c2VyGAQgAygDIjcKCVdhbGxDbG9jaxIqCgNwZXIYASABKAsyHS5jb25jbGF2ZS5xb3MudjEuUGVyV2FsbENsb2NrIloKDFBlcldhbGxDbG9jaxIkCgNxb3MYASABKAsyFy5jb25jbGF2ZS5xb3MudjEuU2V0SW50EiQKA2pvYhgCIAEoCzIXLmNvbmNsYXZlLnFvcy52MS5TZXRJbnQiYgoESm9icxIzCgthY3RpdmVfam9icxgBIAEoCzIeLmNvbmNsYXZlLnFvcy52MS5BY3RpdmVKb2JzUGVyEiUKA3BlchgCIAEoCzIYLmNvbmNsYXZlLnFvcy52MS5QZXJKb2JzIj0KDUFjdGl2ZUpvYnNQZXISLAoDcGVyGAEgASgLMh8uY29uY2xhdmUucW9zLnYxLlBlckFjY291bnRVc2VyImEKDlBlckFjY291bnRVc2VyEigKB2FjY291bnQYASABKAsyFy5jb25jbGF2ZS5xb3MudjEuU2V0SW50EiUKBHVzZXIYAiABKAsyFy5jb25jbGF2ZS5xb3MudjEuU2V0SW50IloKB1BlckpvYnMSKAoHYWNjb3VudBgBIAEoCzIXLmNvbmNsYXZlLnFvcy52MS5TZXRJbnQSJQoEdXNlchgCIAEoCzIXLmNvbmNsYXZlLnFvcy52MS5TZXRJbnQiOAoIQWNjcnVpbmcSLAoDcGVyGAEgASgLMh8uY29uY2xhdmUucW9zLnYxLlBlckFjY291bnRVc2VyImgKCU1pbkxpbWl0cxIzChJwcmlvcml0eV90aHJlc2hvbGQYASABKAsyFy5jb25jbGF2ZS5xb3MudjEuU2V0SW50EiYKBHRyZXMYAiABKAsyGC5jb25jbGF2ZS5xb3MudjEuVHJlc01pbiIWCgdUcmVzTWluEgsKA2pvYhgBIAMoAyJTCgdQcmVlbXB0EgwKBGxpc3QYASADKAkSDAoEbW9kZRgCIAMoCRIsCgtleGVtcHRfdGltZRgDIAEoCzIXLmNvbmNsYXZlLnFvcy52MS5TZXRJbnQiqQIKA1FvUxITCgtkZXNjcmlwdGlvbhgBIAEoCRINCgVmbGFncxgCIAMoCRIKCgJpZBgDIAEoBRInCgZsaW1pdHMYBCABKAsyFy5jb25jbGF2ZS5xb3MudjEuTGltaXRzEgwKBG5hbWUYBSABKAkSKQoHcHJlZW1wdBgGIAEoCzIYLmNvbmNsYXZlLnFvcy52MS5QcmVlbXB0EikKCHByaW9yaXR5GAcgASgLMhcuY29uY2xhdmUucW9zLnYxLlNldEludBIwCgx1c2FnZV9mYWN0b3IYCCABKAsyGi5jb25jbGF2ZS5xb3MudjEuU2V0RG91YmxlEjMKD3VzYWdlX3RocmVzaG9sZBgJIAEoCzIaLmNvbmNsYXZlLnFvcy52MS5TZXREb3VibGUiLAoHUW9TTGlzdBIhCgNxb3MYASADKAsyFC5jb25jbGF2ZS5xb3MudjEuUW9TQkFaP2dpdGh1Yi5jb20vZGR5bWtvL2NvbmNsYXZlLWJhY2tlbmQvZ2VuL2dvL2NvbmNsYXZlL3Fvcy92MTtxb3N2MWIGcHJvdG8z");

/**
 * A helper message for integer-based limits.
 *
 * @generated from message conclave.qos.v1.SetInt
 */
export type SetInt = Message<"conclave.qos.v1.SetInt"> & {
  /**
   * @generated from field: bool set = 1;
   */
  set: boolean;

  /**
   * @generated from field: bool infinite = 2;
   */
  infinite: boolean;

  /**
   * @generated from field: int64 number = 3;
   */
  number: bigint;
};

/**
 * Describes the message conclave.qos.v1.SetInt.
 * Use `create(SetIntSchema)` to create a new message.
 */
export const SetIntSchema: GenMessage<SetInt> = /*@__PURE__*/
  messageDesc(file_conclave_qos_v1_qos, 0);

/**
 * A helper message for double-based limits.
 *
 * @generated from message conclave.qos.v1.SetDouble
 */
export type SetDouble = Message<"conclave.qos.v1.SetDouble"> & {
  /**
   * @generated from field: bool set = 1;
   */
  set: boolean;

  /**
   * @generated from field: bool infinite = 2;
   */
  infinite: boolean;

  /**
   * @generated from field: double number = 3;
   */
  number: number;
};

/**
 * Describes the message conclave.qos.v1.SetDouble.
 * Use `create(SetDoubleSchema)` to create a new message.
 */
export const SetDoubleSchema: GenMessage<SetDouble> = /*@__PURE__*/
  messageDesc(file_conclave_qos_v1_qos, 1);

/**
 * Limits container for QoS.
 *
 * @generated from message conclave.qos.v1.Limits
 */
export type Limits = Message<"conclave.qos.v1.Limits"> & {
  /**
   * @generated from field: int32 grace_time = 1;
   */
  graceTime: number;

  /**
   * @generated from field: conclave.qos.v1.MaxLimits max = 2;
   */
  max?: MaxLimits;

  /**
   * 'factor' uses double precision.
   *
   * @generated from field: conclave.qos.v1.SetDouble factor = 3;
   */
  factor?: SetDouble;

  /**
   * @generated from field: conclave.qos.v1.MinLimits min = 4;
   */
  min?: MinLimits;
};

/**
 * Describes the message conclave.qos.v1.Limits.
 * Use `create(LimitsSchema)` to create a new message.
 */
export const LimitsSchema: GenMessage<Limits> = /*@__PURE__*/
  messageDesc(file_conclave_qos_v1_qos, 2);

/**
 * Maximum limits.
 *
 * @generated from message conclave.qos.v1.MaxLimits
 */
export type MaxLimits = Message<"conclave.qos.v1.MaxLimits"> & {
  /**
   * @generated from field: conclave.qos.v1.ActiveJobs active_jobs = 1;
   */
  activeJobs?: ActiveJobs;

  /**
   * @generated from field: conclave.qos.v1.TresLimits tres = 2;
   */
  tres?: TresLimits;

  /**
   * @generated from field: conclave.qos.v1.WallClock wall_clock = 3;
   */
  wallClock?: WallClock;

  /**
   * @generated from field: conclave.qos.v1.Jobs jobs = 4;
   */
  jobs?: Jobs;

  /**
   * @generated from field: conclave.qos.v1.Accruing accruing = 5;
   */
  accruing?: Accruing;
};

/**
 * Describes the message conclave.qos.v1.MaxLimits.
 * Use `create(MaxLimitsSchema)` to create a new message.
 */
export const MaxLimitsSchema: GenMessage<MaxLimits> = /*@__PURE__*/
  messageDesc(file_conclave_qos_v1_qos, 3);

/**
 * Active jobs limits.
 *
 * @generated from message conclave.qos.v1.ActiveJobs
 */
export type ActiveJobs = Message<"conclave.qos.v1.ActiveJobs"> & {
  /**
   * @generated from field: conclave.qos.v1.SetInt accruing = 1;
   */
  accruing?: SetInt;

  /**
   * @generated from field: conclave.qos.v1.SetInt count = 2;
   */
  count?: SetInt;
};

/**
 * Describes the message conclave.qos.v1.ActiveJobs.
 * Use `create(ActiveJobsSchema)` to create a new message.
 */
export const ActiveJobsSchema: GenMessage<ActiveJobs> = /*@__PURE__*/
  messageDesc(file_conclave_qos_v1_qos, 4);

/**
 * Limits on TRES under "max".
 *
 * @generated from message conclave.qos.v1.TresLimits
 */
export type TresLimits = Message<"conclave.qos.v1.TresLimits"> & {
  /**
   * 'total' is an array of numbers (assumed int64).
   *
   * @generated from field: repeated int64 total = 1;
   */
  total: bigint[];

  /**
   * @generated from field: conclave.qos.v1.Minutes minutes = 2;
   */
  minutes?: Minutes;

  /**
   * @generated from field: conclave.qos.v1.TresPer per = 3;
   */
  per?: TresPer;
};

/**
 * Describes the message conclave.qos.v1.TresLimits.
 * Use `create(TresLimitsSchema)` to create a new message.
 */
export const TresLimitsSchema: GenMessage<TresLimits> = /*@__PURE__*/
  messageDesc(file_conclave_qos_v1_qos, 5);

/**
 * Minutes limits with per arrays.
 *
 * @generated from message conclave.qos.v1.Minutes
 */
export type Minutes = Message<"conclave.qos.v1.Minutes"> & {
  /**
   * @generated from field: conclave.qos.v1.PerArrays per = 1;
   */
  per?: PerArrays;
};

/**
 * Describes the message conclave.qos.v1.Minutes.
 * Use `create(MinutesSchema)` to create a new message.
 */
export const MinutesSchema: GenMessage<Minutes> = /*@__PURE__*/
  messageDesc(file_conclave_qos_v1_qos, 6);

/**
 * Arrays for minutes limits.
 *
 * @generated from message conclave.qos.v1.PerArrays
 */
export type PerArrays = Message<"conclave.qos.v1.PerArrays"> & {
  /**
   * @generated from field: repeated int64 qos = 1;
   */
  qos: bigint[];

  /**
   * @generated from field: repeated int64 job = 2;
   */
  job: bigint[];

  /**
   * @generated from field: repeated int64 account = 3;
   */
  account: bigint[];

  /**
   * @generated from field: repeated int64 user = 4;
   */
  user: bigint[];
};

/**
 * Describes the message conclave.qos.v1.PerArrays.
 * Use `create(PerArraysSchema)` to create a new message.
 */
export const PerArraysSchema: GenMessage<PerArrays> = /*@__PURE__*/
  messageDesc(file_conclave_qos_v1_qos, 7);

/**
 * Per-resource limits for TRES.
 *
 * @generated from message conclave.qos.v1.TresPer
 */
export type TresPer = Message<"conclave.qos.v1.TresPer"> & {
  /**
   * @generated from field: repeated int64 account = 1;
   */
  account: bigint[];

  /**
   * @generated from field: repeated int64 job = 2;
   */
  job: bigint[];

  /**
   * @generated from field: repeated int64 node = 3;
   */
  node: bigint[];

  /**
   * @generated from field: repeated int64 user = 4;
   */
  user: bigint[];
};

/**
 * Describes the message conclave.qos.v1.TresPer.
 * Use `create(TresPerSchema)` to create a new message.
 */
export const TresPerSchema: GenMessage<TresPer> = /*@__PURE__*/
  messageDesc(file_conclave_qos_v1_qos, 8);

/**
 * Wall clock limits.
 *
 * @generated from message conclave.qos.v1.WallClock
 */
export type WallClock = Message<"conclave.qos.v1.WallClock"> & {
  /**
   * @generated from field: conclave.qos.v1.PerWallClock per = 1;
   */
  per?: PerWallClock;
};

/**
 * Describes the message conclave.qos.v1.WallClock.
 * Use `create(WallClockSchema)` to create a new message.
 */
export const WallClockSchema: GenMessage<WallClock> = /*@__PURE__*/
  messageDesc(file_conclave_qos_v1_qos, 9);

/**
 * @generated from message conclave.qos.v1.PerWallClock
 */
export type PerWallClock = Message<"conclave.qos.v1.PerWallClock"> & {
  /**
   * @generated from field: conclave.qos.v1.SetInt qos = 1;
   */
  qos?: SetInt;

  /**
   * @generated from field: conclave.qos.v1.SetInt job = 2;
   */
  job?: SetInt;
};

/**
 * Describes the message conclave.qos.v1.PerWallClock.
 * Use `create(PerWallClockSchema)` to create a new message.
 */
export const PerWallClockSchema: GenMessage<PerWallClock> = /*@__PURE__*/
  messageDesc(file_conclave_qos_v1_qos, 10);

/**
 * Job-related limits.
 *
 * @generated from message conclave.qos.v1.Jobs
 */
export type Jobs = Message<"conclave.qos.v1.Jobs"> & {
  /**
   * @generated from field: conclave.qos.v1.ActiveJobsPer active_jobs = 1;
   */
  activeJobs?: ActiveJobsPer;

  /**
   * @generated from field: conclave.qos.v1.PerJobs per = 2;
   */
  per?: PerJobs;
};

/**
 * Describes the message conclave.qos.v1.Jobs.
 * Use `create(JobsSchema)` to create a new message.
 */
export const JobsSchema: GenMessage<Jobs> = /*@__PURE__*/
  messageDesc(file_conclave_qos_v1_qos, 11);

/**
 * @generated from message conclave.qos.v1.ActiveJobsPer
 */
export type ActiveJobsPer = Message<"conclave.qos.v1.ActiveJobsPer"> & {
  /**
   * @generated from field: conclave.qos.v1.PerAccountUser per = 1;
   */
  per?: PerAccountUser;
};

/**
 * Describes the message conclave.qos.v1.ActiveJobsPer.
 * Use `create(ActiveJobsPerSchema)` to create a new message.
 */
export const ActiveJobsPerSchema: GenMessage<ActiveJobsPer> = /*@__PURE__*/
  messageDesc(file_conclave_qos_v1_qos, 12);

/**
 * @generated from message conclave.qos.v1.PerAccountUser
 */
export type PerAccountUser = Message<"conclave.qos.v1.PerAccountUser"> & {
  /**
   * @generated from field: conclave.qos.v1.SetInt account = 1;
   */
  account?: SetInt;

  /**
   * @generated from field: conclave.qos.v1.SetInt user = 2;
   */
  user?: SetInt;
};

/**
 * Describes the message conclave.qos.v1.PerAccountUser.
 * Use `create(PerAccountUserSchema)` to create a new message.
 */
export const PerAccountUserSchema: GenMessage<PerAccountUser> = /*@__PURE__*/
  messageDesc(file_conclave_qos_v1_qos, 13);

/**
 * @generated from message conclave.qos.v1.PerJobs
 */
export type PerJobs = Message<"conclave.qos.v1.PerJobs"> & {
  /**
   * @generated from field: conclave.qos.v1.SetInt account = 1;
   */
  account?: SetInt;

  /**
   * @generated from field: conclave.qos.v1.SetInt user = 2;
   */
  user?: SetInt;
};

/**
 * Describes the message conclave.qos.v1.PerJobs.
 * Use `create(PerJobsSchema)` to create a new message.
 */
export const PerJobsSchema: GenMessage<PerJobs> = /*@__PURE__*/
  messageDesc(file_conclave_qos_v1_qos, 14);

/**
 * Accruing limits.
 *
 * @generated from message conclave.qos.v1.Accruing
 */
export type Accruing = Message<"conclave.qos.v1.Accruing"> & {
  /**
   * @generated from field: conclave.qos.v1.PerAccountUser per = 1;
   */
  per?: PerAccountUser;
};

/**
 * Describes the message conclave.qos.v1.Accruing.
 * Use `create(AccruingSchema)` to create a new message.
 */
export const AccruingSchema: GenMessage<Accruing> = /*@__PURE__*/
  messageDesc(file_conclave_qos_v1_qos, 15);

/**
 * Minimum limits.
 *
 * @generated from message conclave.qos.v1.MinLimits
 */
export type MinLimits = Message<"conclave.qos.v1.MinLimits"> & {
  /**
   * @generated from field: conclave.qos.v1.SetInt priority_threshold = 1;
   */
  priorityThreshold?: SetInt;

  /**
   * @generated from field: conclave.qos.v1.TresMin tres = 2;
   */
  tres?: TresMin;
};

/**
 * Describes the message conclave.qos.v1.MinLimits.
 * Use `create(MinLimitsSchema)` to create a new message.
 */
export const MinLimitsSchema: GenMessage<MinLimits> = /*@__PURE__*/
  messageDesc(file_conclave_qos_v1_qos, 16);

/**
 * Minimum TRES limits.
 *
 * @generated from message conclave.qos.v1.TresMin
 */
export type TresMin = Message<"conclave.qos.v1.TresMin"> & {
  /**
   * @generated from field: repeated int64 job = 1;
   */
  job: bigint[];
};

/**
 * Describes the message conclave.qos.v1.TresMin.
 * Use `create(TresMinSchema)` to create a new message.
 */
export const TresMinSchema: GenMessage<TresMin> = /*@__PURE__*/
  messageDesc(file_conclave_qos_v1_qos, 17);

/**
 * Preempt settings.
 *
 * @generated from message conclave.qos.v1.Preempt
 */
export type Preempt = Message<"conclave.qos.v1.Preempt"> & {
  /**
   * @generated from field: repeated string list = 1;
   */
  list: string[];

  /**
   * @generated from field: repeated string mode = 2;
   */
  mode: string[];

  /**
   * @generated from field: conclave.qos.v1.SetInt exempt_time = 3;
   */
  exemptTime?: SetInt;
};

/**
 * Describes the message conclave.qos.v1.Preempt.
 * Use `create(PreemptSchema)` to create a new message.
 */
export const PreemptSchema: GenMessage<Preempt> = /*@__PURE__*/
  messageDesc(file_conclave_qos_v1_qos, 18);

/**
 * The main QoS message.
 *
 * @generated from message conclave.qos.v1.QoS
 */
export type QoS = Message<"conclave.qos.v1.QoS"> & {
  /**
   * @generated from field: string description = 1;
   */
  description: string;

  /**
   * @generated from field: repeated string flags = 2;
   */
  flags: string[];

  /**
   * @generated from field: int32 id = 3;
   */
  id: number;

  /**
   * @generated from field: conclave.qos.v1.Limits limits = 4;
   */
  limits?: Limits;

  /**
   * @generated from field: string name = 5;
   */
  name: string;

  /**
   * @generated from field: conclave.qos.v1.Preempt preempt = 6;
   */
  preempt?: Preempt;

  /**
   * @generated from field: conclave.qos.v1.SetInt priority = 7;
   */
  priority?: SetInt;

  /**
   * @generated from field: conclave.qos.v1.SetDouble usage_factor = 8;
   */
  usageFactor?: SetDouble;

  /**
   * @generated from field: conclave.qos.v1.SetDouble usage_threshold = 9;
   */
  usageThreshold?: SetDouble;
};

/**
 * Describes the message conclave.qos.v1.QoS.
 * Use `create(QoSSchema)` to create a new message.
 */
export const QoSSchema: GenMessage<QoS> = /*@__PURE__*/
  messageDesc(file_conclave_qos_v1_qos, 19);

/**
 * Container for a list of QoS objects.
 *
 * @generated from message conclave.qos.v1.QoSList
 */
export type QoSList = Message<"conclave.qos.v1.QoSList"> & {
  /**
   * @generated from field: repeated conclave.qos.v1.QoS qos = 1;
   */
  qos: QoS[];
};

/**
 * Describes the message conclave.qos.v1.QoSList.
 * Use `create(QoSListSchema)` to create a new message.
 */
export const QoSListSchema: GenMessage<QoSList> = /*@__PURE__*/
  messageDesc(file_conclave_qos_v1_qos, 20);

