// @generated by protoc-gen-es v2.2.3 with parameter "target=ts"
// @generated from file conclave/cluster/v1/tres.proto (package conclave.cluster.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file conclave/cluster/v1/tres.proto.
 */
export const file_conclave_cluster_v1_tres: GenFile = /*@__PURE__*/
  fileDesc("Ch5jb25jbGF2ZS9jbHVzdGVyL3YxL3RyZXMucHJvdG8SE2NvbmNsYXZlLmNsdXN0ZXIudjEiPQoEVHJlcxIMCgR0eXBlGAEgASgJEgwKBG5hbWUYAiABKAkSDQoFY291bnQYAyABKAMSCgoCaWQYBCABKAVCSVpHZ2l0aHViLmNvbS9kZHlta28vY29uY2xhdmUtYmFja2VuZC9nZW4vZ28vY29uY2xhdmUvY2x1c3Rlci92MTtjbHVzdGVydjFiBnByb3RvMw");

/**
 * Tres aka Trackable Resource for slurm
 *
 * @generated from message conclave.cluster.v1.Tres
 */
export type Tres = Message<"conclave.cluster.v1.Tres"> & {
  /**
   * type The type of the resource.
   *
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * name The name of the resource.
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * count the count of the resource.
   *
   * @generated from field: int64 count = 3;
   */
  count: bigint;

  /**
   * @generated from field: int32 id = 4;
   */
  id: number;
};

/**
 * Describes the message conclave.cluster.v1.Tres.
 * Use `create(TresSchema)` to create a new message.
 */
export const TresSchema: GenMessage<Tres> = /*@__PURE__*/
  messageDesc(file_conclave_cluster_v1_tres, 0);

